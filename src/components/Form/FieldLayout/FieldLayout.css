/*
wrapper	{
	label {
		span {}
		requiredMark {}
	}
	component {
		container{
			control {

			}
		}
		description{}
		error {}
	}
}
*/
.wrapper {
	@apply px-4 mb-3;
	@apply text-xs;
}
.lblPosRight {
	@apply grid gap-x-4;
	grid-template-columns:
		minmax(0, 1fr)
		minmax(0, max-content);
}
.lblPosRight .label {
	order: 1;
}
.lblPosLeft {
	@apply grid gap-x-4;
	grid-template-columns:
		minmax(0, max-content)
		minmax(0, 1fr);
	@apply box-border;
}
.lblPosTop {
}

.label {
	@apply mb-2;
	@apply inline-block;
	@apply text-primary;
}
.checkLabel {
	@apply inline-block;
	@apply text-primary;
}
.component {
}
.container {
}
.control {
	@apply border-solid border-1 border-gray-300;
	@apply py-1 px-3;
	transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
	@apply outline-0;
	@apply box-border;
	@apply w-full;
	@apply inline-block;
	@apply text-base-primary;
}
.control:hover,
.control:focus {
	@apply border-solid border-blue-400 border-1;
	@apply shadow-mdt-blue;
	@apply outline-0;
}
.control.invalid {
	@apply border-solid border-red-500;
}
.control.invalid > .checkInput {
	@apply border-solid border-red-500;
}
.control.invalid > .checkLabel {
	@apply text-red-700;
}

.input {
}
.textarea {
}

.select {
	@apply w-full;
	background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
	background-repeat: no-repeat;
	background-position: right 0.5rem center;
	background-size: 16px 12px;
	@apply pr-8;
	@apply appearance-none;
}
.checkbox,
.radio {
	@apply border-0;
	@apply shadow-none;
	@apply p-0 pl-2 py-1;
}
.checkbox:hover,
.checkbox:focus,
.radio:hover,
.radio:focus {
	@apply border-0;
	@apply shadow-none;
}
.checkInput {
	@apply border-1 border-solid border-gray-300;
	@apply w-3 h-3;
	@apply m-0 mr-1;
	@apply align-top;
	@apply appearance-none;
	@apply bg-no-repeat bg-white bg-center bg-contain;
	margin-left: -8px;
	margin-top: 2px;
}
.checkInput:hover,
.checkInput:focus {
	@apply border-solid border-blue-400 border-1;
	@apply shadow-mdt-blue;
	@apply outline-0;
}
.checkInput:checked {
	@apply bg-blue-500;
	@apply border-blue-500;
}
.checkInput:checked[type="checkbox"] {
	background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-1 -1 21 22'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/%3e%3c/svg%3e");
}
.checkInput:checked[type="radio"] {
	background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -3 8 6'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e");
}
.checkInput[type="radio"] {
	border-radius: 50%;
}
.checkInput[type="checkbox"]:indeterminate {
	@apply bg-blue-500;
	@apply border-blue-500;
	background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/%3e%3c/svg%3e");
}
.checkInput:disabled {
	@apply pointer-events-none;
	@apply filter-none;
}

.description {
	@apply mt-1;
	@apply text-gray-500 dark:text-gray-400;
}
.error {
	@apply text-danger dark:text-red-500;
	@apply w-full;
	@apply mt-1;
}
.errorDetail {
	@apply my-0 mx-0 pl-10;
}
.requiredMark {
	@apply text-danger font-bold dark:text-red-400;
}
